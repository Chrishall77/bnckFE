{"version":3,"sources":["styling/assets/potato.svg","styling/assets/burger.svg","Components/Header/Header.js","Components/Artists/Artists.js","data/action/state.js","Components/Artists/index.js","Components/Stages/Stages.js","Components/Stages/index.js","Components/Landing/Landing.js","Components/Performances/Performances.js","axios.js","data/action/api.js","Components/Performances/index.js","Components/ArtistBio/ArtistBio.js","Components/ArtistBio/index.js","Components/StageInfo/StageInfo.js","Components/StageInfo/index.js","Components/App/App.js","Components/App/index.js","serviceWorker.js","data/reducer.js","data/initial.js","data/store.js","index.js"],"names":["module","exports","Header","children","className","href","src","potato","burger","Artists","artists","handleClick","map","artist","to","id","key","onClick","name","setPerformances","data","type","performances","connect","state","dispatch","artistId","Stages","stages","stage","stageId","landing","Performances","this","props","handleLoad","referrer","titleStage","performance","stageName","find","stage_id","artistName","artist_id","formatDate","date","hours","getHours","minutes","getMinutes","minuteFormat","starttime","Date","endtime","React","Component","axios","create","baseURL","headers","Accept","getPerformances","get","then","console","log","catch","error","trimmedReferrer","slice","length","filter","withRouter","location","pathname","split","artistInfo","image","bio","ArtistBio","stageData","StageInfo","App","getStages","getArtists","exact","path","component","Landing","setStages","setArtists","Boolean","window","hostname","match","reducer","action","setStage","setArtist","initial","loaded","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","subscribe","getState","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fbd662ba.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/potato.54cdb15d.svg\";","module.exports = __webpack_public_path__ + \"static/media/burger.4dcfadcc.svg\";","import React from 'react';\nimport potato from '../../styling/assets/potato.svg';\nimport burger from '../../styling/assets/burger.svg';\n\nconst Header = ({ children }) => (\n    <>\n        <div className=\"banner\">\n            <div className=\"navLink\"> <a href=\"../../\"><img src={potato} /></a></div>\n            <h1 className=\"bannerTitle\"> { children }</h1>\n            <div className=\"navBurger\"> <img src={burger} /> </div>\n        </div>\n    </>\n);\n\nexport default Header;\n","\nimport React from \"react\";\nimport Header from \"../Header/Header\";\nimport { Link } from \"react-router-dom\";\n\nconst Artists = ({ artists, handleClick }) => (\n    <>\n        <Header>Artists</Header>\n        <div className=\"artistsBackground artistsBackgroundPosition\">\n            <ul className=\"artistList\">\n            {\n                artists.map((artist) =>\n                <Link to = { `artists/${ artist.id }` } > \n                    <li key = { artist.id }\n                        className=\"buttonStyleThree artists\"\n                        onClick = { () => handleClick(artist.id) }\n                    >\n                        { artist.name }\n\n                    </li>\n                </Link>\n                )\n            }\n                \n            </ul>\n        </div>\n    </>\n);\n\nexport default Artists;","export const setStages = (data) => (\n    {\n        type: \"setStages\",\n        stages: data,\n    }\n)\n\nexport const setArtists = (data) => (\n    {\n        type: \"setArtists\",\n        artists: data,\n    }\n)\n\nexport const setArtist = (data) => (\n    {\n        type: \"setArtist\",\n        artist: data,\n    }\n)\n\nexport const setPerformances = (data) => (\n    {\n        type: \"setPerformances\",\n        performances: data,\n    }\n)\n\nexport const setStage = (data) => (\n    {\n        type: \"setStage\",\n        stage: data,\n    }\n)\n\n\n","import { connect } from \"react-redux\";\nimport Artists from \"./Artists\";\nimport { setArtist } from \"../../data/action/state\";\n\nconst mapStateToProps = state => {\n    return {\n        artists: state.artists,\n        };\n    };\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleClick: (artistId) => {\n            dispatch(setArtist(artistId));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Artists);","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport Header from \"../Header/Header\";\n\n\nconst Stages = ({ stages, handleClick }) => (\n    <>\n        <Header>Stages</Header>\n        <div className=\"stagesBackground stagesBackgroundPosition\">\n            <ul className=\"stagesGrid gridPosition\">\n            {\n                stages.map((stage) =>\n\n                    <Link to = { `stages/${ stage.id }` } className=\"linkStyle\"> \n                        <li key = { stage.id }\n                            className=\"buttonStyleTwo\"\n                            onClick = { () => handleClick(stage.id) }\n                        >\n                            { stage.name }\n                        </li>\n                    </Link>\n\n                )\n            }\n                \n            </ul>\n        </div>\n    </>\n);\n\nexport default Stages;","import { connect } from \"react-redux\";\nimport Stages from \"./Stages\";\nimport { setStage } from \"../../data/action/state\";\n\nconst mapStateToProps = state => {\n    return {\n        stages: state.stages,\n        };\n    };\n\nconst mapDispatchToProps = dispatch => {\n    return {\n        handleClick: (stageId) => {\n            dispatch(setStage(stageId));\n        }\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Stages);","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst landing = () => (\n    <>\n        <div className=\"landingBackground\">\n            <h1 className=\"logoText\">BNCK</h1>\n        </div>\n        <Link to=\"stages\" className=\"linkStyle\">\n            <div className=\"buttonStyleOne buttonStyleOne1\">\n                Stages\n            </div>\n        </Link>\n        <Link to=\"artists\" className=\"linkStyle\">\n            <div className=\"buttonStyleOne buttonStyleOne2\">\n                Artists\n            </div>\n        </Link>\n    </>\n);\n\nexport default landing;","import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\n\n\nexport default class Performances extends React.Component {\n\n\n    componentDidMount() {\n        this.props.handleLoad();\n    }\n\n\n    render() {\n\n        const {performances, stages, titleStage, referrer, artists, id } = this.props;\n\n        return(\n            <div className=\"performanceBackground\">\n                <ul className=\"performanceWrapper\">\n                    {\n                        performances.map((performance) => {\n        \n                            let stageName = stages.find((stage)=> {\n                                return stage.id === performance.stage_id;\n                            })\n                            \n                            let artistName = artists.find((artist)=> {\n                                return artist.id === performance.artist_id;\n                            })\n\n                            let formatDate = (date) => {\n\n                                let hours = date.getHours();\n                                let minutes = date.getMinutes();\n                                let minuteFormat = minutes < 10 ? \"0\" + minutes : minutes;\n                                let hourFormat = hours < 10 ? \"0\" + hours : hours;\n\n                                return `${hourFormat} : ${minuteFormat}`\n\n                            }\n\n                            let starttime = new Date(performance.starttime);\n                            let endtime = new Date(performance.endtime);\n                            \n\n                            return (\n\n        \n                                <li className=\"artist\" key={ performance.id }>\n                                    <div className=\"buttonStyleFour timeButtonTime\">\n                                        <p>{ formatDate(starttime) }\n                                        <br/>\n                                        { formatDate(endtime) }</p>\n                                    </div>\n                                    <div className=\"buttonStyleFive timeButtonArtist\">\n                                    <Link to = { `bnckFE/artists/${ performance.artist_id }` } > \n                                         <p>{ referrer === \"artists\" ? stageName.name : artistName.name }</p>\n                                    </Link>\n                                    </div>\n                                </li>\n                            )\n                        }\n                    )\n\n                    }\n                </ul>\n            </div>\n        );\n    }\n}\n\n\n\n","// import the axios library\nimport axios from \"axios\";\n// return a new version of axios with useful settings applied\nexport default axios.create({\nbaseURL: \"https://bnck.developme.space/api/\", headers: {\n        Accept: \"application/json\",\n}, });","//do thunks here\nimport axios from \"../../axios\";\nimport { setStages, setArtists, setPerformances } from \"./state\";\n\nexport const getStages = () => (dispatch) => {\n    axios.get(\"/stages\").then(({ data })=>{\n        console.log(dispatch);\n        dispatch(setStages(data.data));\n    }).catch((error)=>{console.error(error)})\n}\n\nexport const getArtists = () => (dispatch) => {\n    axios.get(\"/artists\").then(({ data })=>{\n        console.log(dispatch);\n        dispatch(setArtists(data.data));\n    }).catch((error)=>{console.error(error)})\n}\n\nexport const getPerformances = ( referrer=\"stages\", id=\"1\" ) => (dispatch) => {\n    axios.get(`/${ referrer }/${ id }/performances`).then(({ data })=>{\n        console.log(dispatch);\n        dispatch(setPerformances(data.data));\n    }).catch((error)=>{console.error(error)})\n}\n\n\n","import { connect } from \"react-redux\";\nimport Performances from \"./Performances\";\nimport { getPerformances } from \"../../data/action/api\";\n\nconst mapStateToProps = (state, { id, referrer }) => {\n    const trimmedReferrer = referrer.slice(0,referrer.length - 1);\n    console.log(trimmedReferrer)\n    return {\n        performances: state.performances.filter((performance )=> performance[`${ trimmedReferrer }_id`] === +id),\n        stages: state.stages,\n        artists: state.artists,\n    };\n};\n\nconst mapDispatchToProps = ( dispatch, { id, referrer } ) => {\n    return {\n        handleLoad: () => dispatch(getPerformances(referrer, id))\n    }\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps )(Performances);","import React from 'react';\nimport Performances from '../Performances';\nimport Header from \"../Header/Header\";\nimport { withRouter } from \"react-router-dom\";\n\nconst ArtistBio = ({ location, artists }) => {\n    const { pathname } = location;\n    const [ ,referrer, id ] = pathname.split(\"/\")\n\n    // let stageName = stages.find((stage)=> {\n    //     return stage.id === performance.stage_id;\n    // })\n    console.log(id);\n    console.log(artists);\n    const artistInfo = artists.find((artist)=> {\n        console.log(artist.id)\n        return artist.id === +id;\n    })\n    console.log(artistInfo);\n\n    return (\n        <>\n            <Header>{ artistInfo ? artistInfo.name : \"\" }</Header>\n            <div className=\"artistBioBackground artistBioBackgroundPosition artistName\" id=\"artist#\">\n                <img className=\"artistBioImage\" src={ artistInfo ? artistInfo.image : \"\" } />\n                <div className=\"artistBioText\">\n                    <p>{ artistInfo ? artistInfo.bio : \"\" }</p>\n                </div>\n                <div className=\"artistStages\">\n                    <Performances \n                        referrer={ referrer }\n                        id={ id }\n                    />\n                </div>\n            </div>\n        </>\n    )\n\n};\n\nexport default withRouter(ArtistBio);\n","import { connect } from 'react-redux';\nimport ArtistBio from './ArtistBio';\n\nconst mapStateToProps = ({ artists }) => {\n    console.log(\"ArtistBio: Index\")\n    return {\n        artists: artists,\n    }\n}\n\nexport default connect(mapStateToProps)(ArtistBio);","import React from \"react\";\nimport Performances from '../Performances';\nimport { withRouter } from 'react-router-dom';\nimport Header from '../Header/Header';\n\n\nconst StageInfo = ({ location, stages }) => {\n    const { pathname } = location;\n    const [ ,referrer, id ] = pathname.split(\"/\")\n    \n   console.log(stages);\n\n    const stageData = stages.find((stage)=> {\n        return stage.id === +id\n    })\n\n    console.log(stageData)\n\n    return (\n        <>\n            <Header>{ stageData ? stageData.name : \"\" }</Header>\n            <div className={`stage${id}`}>\n                <Performances \n                    referrer={ referrer }\n                    id={ id }\n                />\n            </div>\n        </>\n    )\n};\n\nexport default withRouter(StageInfo);\n\n","import { connect } from 'react-redux';\nimport StageInfo from './StageInfo';\n\nconst mapStateToProps = ({ stages }) => {\n    console.log(\"Stages: \" + stages)\n    return {\n        stages: stages,\n    }\n}\n\nexport default connect(mapStateToProps)(StageInfo);","import React from 'react';\nimport Artists from '../Artists';\nimport Stages from '../Stages';\nimport Landing from '../Landing/Landing';\nimport ArtistBio from '../ArtistBio'; \nimport StageInfo from '../StageInfo';\nimport {\n  BrowserRouter as Router,\n  Route,\n} from \"react-router-dom\";\n\n\nclass App extends React.Component {\n\n  componentDidMount() {\n    this.props.getStages();\n    this.props.getArtists();\n    this.props.getPerformances();\n  }\n\n\n  render() {\n    return (\n      <Router>\n        <div>\n          <Route exact path=\"/bnckFE\" component = { Landing } />\n          <Route exact path=\"/bnckFE/artists\" component={ Artists } />\n          <Route exact path=\"/bnckFE/stages\" component={ Stages }/>\n          <Route exact path=\"/bnckFE/stages/:id\" component={ StageInfo } />\n          <Route exact path=\"/bnckFE/artists/:id\" component={ ArtistBio } />\n          {/* <Performances titleStage = { false } /> */}\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","import App from \"./App\";\nimport { connect } from \"react-redux\";\nimport { getStages, getArtists, getPerformances } from \"../../data/action/api\";\n\nconst mapDispatchToProps = (dispatch) => {\n    return { \n        getStages: ()=>dispatch(getStages()),\n        getArtists: ()=>dispatch(getArtists()),\n        getPerformances: ()=>dispatch(getPerformances()),\n    }\n}\n\n\nexport default connect(null, mapDispatchToProps)(App);","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const setArtists = (state, action) => {\n    return {\n        ...state,\n        artists: action.artists,\n    }\n}\n\nconst setArtist = (state, action) => {\n    return {\n        ...state,\n        artist: action.artist,\n    }\n}\n\nconst setStages = (state, action) => {\n    return {\n        ...state,\n        stages: action.stages,\n    }\n}\n\nconst setStage = (state, action) => {\n    return {\n        ...state,\n        stage: action.stage,\n    }\n}\n\nconst setPerformances = (state, action) => {\n    return {\n        ...state,\n        performances: action.performances,\n    }\n}\n\nconst reducer = (state, action) => {\n    switch (action.type) {\n        case \"setStages\": return setStages(state, action);\n        case \"setStage\": return setStage(state, action); \n        case \"setArtists\": return setArtists(state, action); \n        case \"setArtist\": return setArtist(state, action); \n        case \"setPerformances\": return setPerformances(state, action); \n        default: return state;\n    } \n};\n\nexport default reducer","const initial = {\n    id: 0,\n    name: \"\",\n    bio:\"\",\n    image:\"\",\n    artists:[],\n    stages:[],\n    performances:[],\n    loaded: false,\n    stage:0,\n    artist: 0,\n};\n\nexport default initial;","  \nimport { createStore, applyMiddleware, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport reducer from \"./reducer\";\nimport initial from \"./initial\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst store = createStore(\n    reducer, \n    initial, \n    composeEnhancers(applyMiddleware(thunk))\n);\n\nstore.subscribe(() => {\n    return store.getState();\n});\n\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styling/stylesheets/browser.css';\nimport App from './Components/App';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./data/store\";\nimport { Provider } from \"react-redux\";\n\nReactDOM.render(\n    \n    <Provider store={ store }>\n        <App />\n    </Provider>\n    , document.getElementById(\"root\")\n); \n\nserviceWorker.unregister();\n"],"sourceRoot":""}